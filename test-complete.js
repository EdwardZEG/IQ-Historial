// Test completo para login + historial en modo producci√≥n
process.env.NODE_ENV = 'production';
process.env.VERCEL = '1';

const { loginIQOption, obtenerHistorialIQOption } = require('./utils/iqApi');

async function testCompleteFlow() {
    console.log('üß™ Iniciando prueba completa: Login + Historial...');
    
    try {
        // Test 1: Login
        console.log('\n1Ô∏è‚É£ Probando login...');
        const loginResult = await loginIQOption('test@example.com', 'test123');
        console.log('üìä Login result:', loginResult);
        
        if (!loginResult.success) {
            console.log('‚ùå Login fall√≥, abortando prueba');
            return;
        }
        
        // Test 2: Historial
        console.log('\n2Ô∏è‚É£ Probando historial...');
        const historialResult = await obtenerHistorialIQOption(
            'test@example.com', 
            'test123',
            'REAL',
            '2025-04-01',
            '2025-08-15',
            'all'
        );
        
        console.log('üìä Historial result:', {
            success: historialResult.success,
            operaciones: historialResult.history?.length || 0,
            balance: historialResult.balance,
            simulated: historialResult.simulated || false
        });
        
        if (historialResult.success) {
            console.log('\n‚úÖ Prueba completa exitosa - Todo funciona en producci√≥n! üéâ');
        } else {
            console.log('\n‚ùå Error en historial:', historialResult.error);
        }
        
    } catch (error) {
        console.error('\nüí• Error en prueba completa:', error.message);
    }
}

testCompleteFlow();
